{"version":3,"file":"2a833a263c530a88fac6954b760df4eebfd22a18-ba8e154b2dad8766fe0f.js","mappings":"2NAaO,MAAMA,EAAuEC,IAG7E,IAH8E,eACnFC,EAAc,gBACdC,GACDF,EACC,MAAM,MACJG,EAAK,SACLC,EAAQ,QACRC,EAAO,SACPC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,OACE,WAAEC,EAAU,cAAEC,IAAkBC,EAAAA,EAAAA,OAChC,EAAEC,IAAMC,EAAAA,EAAAA,KAERC,EAAaZ,EAAM,SAEnBa,EAAQN,EAAWT,GAoBzB,OAlBAgB,EAAAA,WAAgB,KACd,IAAKF,EAAY,OACjB,GAAIG,SAASH,EAAWC,SAAWA,EAAO,OAE1C,MAAMG,EAAgBC,EAAmBC,MAAMC,GAAgBA,EAAYN,QAAUD,EAAWC,QAE5FG,GACFR,EAAc,IAAKD,EAAY,CAACT,GAAiBiB,SAASC,EAAcH,QAC1E,GACC,CAACD,IAEJE,EAAAA,WAAgB,KACdX,EACE,QACAc,EAAmBC,MAAMC,GAAgBA,EAAYN,cAAqBO,IAAVP,GAAuBA,EAAMQ,cAC9F,GACA,KAGDC,EAAAA,EAAAA,MAAA,OAAKC,WAAWC,EAAAA,EAAAA,GCjDG,iDDiDoBzB,GAAmBA,GAAiB0B,SAAA,EACzEH,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CAAOf,EAAE,oBAAoB,QAC7BgB,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACXC,UAAWlB,EAAE,uBACPT,WAAUI,SAAQH,UACxB2B,aAAcC,EAAAA,GACdC,KAAK,QACLC,QAASf,EACTgB,cAAc,OACdC,YAAaxB,EAAE,aAEb,EAIJO,EAAqB,CACzB,CAAEkB,MAAO,IAAKtB,MAAO,KACrB,CAAEsB,MAAO,IAAKtB,MAAO,KACrB,CAAEsB,MAAO,KAAMtB,MAAO,MACtB,CAAEsB,MAAO,KAAMtB,MAAO,MACtB,CAAEsB,MAAO,KAAMtB,MAAO,MACtB,CAAEsB,MAAO,KAAMtB,MAAO,MACtB,CAAEsB,MAAO,KAAMtB,MAAO,MACtB,CAAEsB,MAAO,MAAOtB,MAAO,O,yFEnElB,MAAMuB,EAAmBC,IAC9B,MAAMC,EAAyBxB,EAAAA,WAAiByB,EAAAA,GAyChD,MAAO,CAAEC,OAvCOC,IACdC,EAAAA,EAAAA,UAAqB,CAAC,gBAAiBD,IAAiB,IAAMH,aAAG,EAAHA,EAAKK,aAAaH,OAAOC,IAAiB,CACtGG,YAAaA,KAAA,IAAAC,EAAA,OACqC,QADrCA,EACXR,EAAYS,aAAoB,wBAAgB,IAAAD,OAAA,EAAhDA,EAAkD3B,MAAM6B,GAAkBA,EAAcC,KAAOP,GAAe,EAChHQ,QAAUC,IACR,MAAM,IAAIC,MAAMD,EAAME,QAAQ,EAEhCC,UAAWZ,IAgCEa,OA7BFA,CAACC,EAA0BC,EAAqBC,KAC7Df,EAAAA,EAAAA,UACE,CAAC,gBAAiBa,EAASC,EAAaC,IACxC,IAAMnB,aAAG,EAAHA,EAAKK,aAAaW,OAAOC,EAASC,EAAaC,IACrD,CACER,QAAUC,IACR,MAAM,IAAIC,MAAMD,EAAME,QAAQ,IAuBbM,SAXPH,IAChBb,EAAAA,EAAAA,UAAqB,CAAC,sBAAuBa,IAAU,IAAMjB,aAAG,EAAHA,EAAKK,aAAae,SAASH,IAAU,CAChGN,QAAUC,IACR,MAAM,IAAIC,MAAMD,EAAME,QAAQ,EAEhCO,sBAAsB,EACtBC,oBAAoB,EACpBC,OAAO,EACPC,UAAW,MAGoBC,cAlBbA,KACpBrB,EAAAA,EAAAA,UAAqB,CAAC,kBAAkB,IAAMJ,aAAG,EAAHA,EAAKK,aAAaoB,iBAAiB,CAC/Ed,QAAUC,IACR,MAAM,IAAIC,MAAMD,EAAME,QAAQ,IAec,C,qLC3C7C,MAAMY,EAA8CA,KACzD,MAAM,QAAET,EAAO,WAAEU,IAAeC,EAAAA,EAAAA,KAC1BC,EAAgBrD,EAAAA,OAAoC,OAEpD,SACJb,EAAQ,MACRD,EAAK,MACLoE,EACAhE,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MACJQ,EAAAA,WAAgB,KACdsD,EAAM,CACJrC,KAAMwB,EAAQc,oBACd,GACD,CAACd,IAEJ,MAAMe,EAAYtE,EAAM,QAcxB,OAZAc,EAAAA,WAAgB,KACVqD,EAAcI,SAASC,aAAaL,EAAcI,SACtDJ,EAAcI,QAAUE,YACtB,IACER,EAAW,IACNV,EACHc,wBAAkCjD,IAAdkD,EAA0B,GAAKA,KAEvD,IACD,GACA,CAACA,KAGF5C,EAAAA,EAAAA,KAAA,QACEgD,SAAWC,IACTA,EAAEC,gBAAgB,EAClBnD,UAEFH,EAAAA,EAAAA,MAACuD,EAAAA,GAAS,CAAApD,SAAA,EACRC,EAAAA,EAAAA,KAACoD,EAAAA,GAAS,CAACC,QAAS,8BAA8BtD,SAAC,kBACnDC,EAAAA,EAAAA,KAACsD,EAAAA,GAAO,CAAChC,GAAG,iCAAkC/C,EAAS,OAAQ,CAAEgF,UAAU,IAASC,QAAS7E,EAAa,WAEvG,EC5CJ,I,UCOA,MAAM8E,EAAoFtF,IAE1F,IAF2F,cAChGuF,GACDvF,EACC,OACE6B,EAAAA,EAAAA,KAAA,OAAKH,UDXmB,iECWcE,SACnC2D,EAAcC,KAAKC,IAAY,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC9BlE,EAAAA,EAAAA,KAAAmE,EAAAA,SAAA,CAAApE,SACG6D,EAAaQ,MAAMC,OAAOC,IAAIC,SAAS,8BACtCvE,EAAAA,EAAAA,KAACwE,EAAAA,EAAgB,CACfC,MAAO,CACLhE,MAAOmD,EAAavD,KACpBqE,KAAO,kBAAiBd,EAAatC,MAEvCqD,YAAaf,EAAae,YAC1BC,QAAShB,EAAagB,QACtBC,KAAMjB,EAAaiB,KACnBC,WAAY,CACVC,MAA2C,QAAtClB,EAAmB,QAAnBC,EAAEF,EAAaoB,YAAI,IAAAlB,OAAA,EAAjBA,EAAmBmB,OAAOtF,kBAAU,IAAAkE,EAAAA,EAAI,IAC/CqB,UAAmD,QAA1CnB,EAAuB,QAAvBC,EAAEJ,EAAauB,gBAAQ,IAAAnB,OAAA,EAArBA,EAAuBiB,OAAOtF,kBAAU,IAAAoE,EAAAA,EAAI,IACvDqB,KAA0C,QAAtCnB,EAAmB,QAAnBC,EAAEN,EAAayB,YAAI,IAAAnB,OAAA,EAAjBA,EAAmBe,OAAOtF,kBAAU,IAAAsE,EAAAA,EAAI,KAEhDqB,OAAQ1B,EAAa2B,OACrBC,OAAQ5B,EAAa6B,OACrBC,KAAM9B,EAAa8B,QAGtB,KAED,E,uBC/BCC,EAAW,2D,gFCuBf,MAAMC,EAAoFzH,IAG1F,IAH2F,cAChGuF,EAAa,cACbmC,GACD1H,EACC,MAAM,EAAEa,IAAMC,EAAAA,EAAAA,KAEd,OACEe,EAAAA,EAAAA,KAAC8F,EAAAA,GAAyB,CACxBC,WAAY,CAAEC,iBAAkBhH,EAAE,eAAgBiH,kBAAmBjH,EAAE,iBAAkBe,UAEzFH,EAAAA,EAAAA,MAACsG,EAAAA,GAAK,CAAAnG,SAAA,EACF8F,IACA7F,EAAAA,EAAAA,KAACmG,EAAAA,GAAW,CAAApG,UACVH,EAAAA,EAAAA,MAACwG,EAAAA,GAAQ,CAAArG,SAAA,EACPC,EAAAA,EAAAA,KAACqG,EAAAA,GAAe,CAAAtG,SAAEf,EAAE,WACpBgB,EAAAA,EAAAA,KAACqG,EAAAA,GAAe,CAAAtG,SAAEf,EAAE,cACpBY,EAAAA,EAAAA,MAACyG,EAAAA,GAAe,CACd,kBAAiBC,EAAAA,WACjB,uBAAsBtH,EAAE,wCACxBa,UD9Cc,mEC8CqBE,SAAA,CAElCf,EAAE,eACHgB,EAAAA,EAAAA,KAACuG,EAAAA,EAAe,CAACC,KAAMC,EAAAA,UAEzBzG,EAAAA,EAAAA,KAACqG,EAAAA,GAAe,CAAAtG,SAAEf,EAAE,cACpBgB,EAAAA,EAAAA,KAACqG,EAAAA,GAAe,CAAAtG,SAAEf,EAAE,oBACpBgB,EAAAA,EAAAA,KAACmG,EAAAA,GAAW,UAKlBvG,EAAAA,EAAAA,MAAC8G,EAAAA,GAAS,CAAA3G,SAAA,CACP2D,EAAcuB,OAAS,GACtBvB,EAAcC,KAAKC,IAAY,IAAA+C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnD,EAAAC,EAAAC,EAAAC,EAAAiD,EAAAC,EAAAC,EAAA,OAC7BvH,EAAAA,EAAAA,MAACwG,EAAAA,GAAQ,CACPvG,UD3DM,2DC6DNuH,QAASA,KAAA,IAAAC,EAAA,OAAMC,EAAAA,EAAAA,IAAU,KAAGC,EAAAA,EAAAA,GAAgC,QAAnBF,EAACzD,EAAaQ,aAAK,IAAAiD,OAAA,EAAlBA,EAAoBhD,OAAOC,QAAQV,EAAatC,KAAK,EAACvB,SAAA,EAEhGC,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,CAAAzH,UACRC,EAAAA,EAAAA,KAAA,QAAMH,UDjEN,uDCiE6BE,SAAE6D,EAAavD,UAG9CL,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,CAAAzH,UACRC,EAAAA,EAAAA,KAACyH,EAAAA,GAAS,CACR,kBAAiBnB,EAAAA,WACjB,uBAAsBtH,EAAE,WACxBa,UAAW6H,EAAgB3H,SAE1B4H,IACmB,QAAlBhB,EAAA/C,EAAaQ,aAAK,IAAAuC,GAAlBA,EAAoBiB,iBACE,QAAlBhB,EAAAhD,EAAaQ,aAAK,IAAAwC,GAAkB,QAAlBC,EAAlBD,EAAoBgB,wBAAgB,IAAAf,GAApCA,EAAsC5B,OAClB,QADwB6B,EAC1ClD,EAAaQ,aAAK,IAAA0C,GAAkB,QAAlBC,EAAlBD,EAAoBc,wBAAgB,IAAAb,GAAQ,QAARC,EAApCD,EAAsCc,IAAI,UAAE,IAAAb,OAA1B,EAAlBA,EAA8Cc,OAAOzH,KACrD,WACF,eAKVL,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,CAAAzH,UACRH,EAAAA,EAAAA,MAAA,OAAKC,UDlFL,uDCkF4BE,SAAA,EAC1BH,EAAAA,EAAAA,MAAC6H,EAAAA,GAAS,CACR,kBAAiBnB,EAAAA,WACjB,uBAAqB,2BACrBzG,UAAW6H,EAAgB3H,SAAA,EAE3BC,EAAAA,EAAAA,KAACuG,EAAAA,EAAe,CAACC,KAAMuB,EAAAA,MACc,QADGlE,EACtB,QADsBC,EACvCF,EAAaoB,YAAI,IAAAlB,OAAA,EAAjBA,EAAmBmB,OAAOtF,kBAAU,IAAAkE,EAAAA,EAAI,QAE3CjE,EAAAA,EAAAA,MAAC6H,EAAAA,GAAS,CACR,kBAAiBnB,EAAAA,WACjB,uBAAqB,kCACrBzG,UAAW6H,EAAgB3H,SAAA,EAE3BC,EAAAA,EAAAA,KAACuG,EAAAA,EAAe,CAACC,KAAMwB,EAAAA,MACmB,QADNjE,EACb,QADaC,EACnCJ,EAAasB,iBAAS,IAAAlB,OAAA,EAAtBA,EAAwBiB,OAAOtF,kBAAU,IAAAoE,EAAAA,EAAI,QAGhDnE,EAAAA,EAAAA,MAAC6H,EAAAA,GAAS,CACR,kBAAiBnB,EAAAA,WACjB,uBAAqB,+BACrBzG,UAAW6H,EAAgB3H,SAAA,EAE3BC,EAAAA,EAAAA,KAACuG,EAAAA,EAAe,CAACC,KAAMyB,EAAAA,MACc,QADFhB,EACjB,QADiBC,EAClCtD,EAAawB,YAAI,IAAA8B,OAAA,EAAjBA,EAAmBjC,OAAOtF,kBAAU,IAAAsH,EAAAA,EAAI,aAK/CjH,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,CAAAzH,UACRH,EAAAA,EAAAA,MAAC6H,EAAAA,GAAS,CACR,kBAAiBnB,EAAAA,WACjB,uBAA0C,QAA1Ca,EAAsBvD,EAAagB,eAAO,IAAAuC,EAAAA,EAAInI,EAAE,WAChDa,UAAW6H,EACXN,QAASA,IAAMc,KAAKtE,EAAagB,SAAS7E,SAAA,CAEzC6D,EAAagB,UAAW5E,EAAAA,EAAAA,KAACuG,EAAAA,EAAe,CAACC,KAAM2B,EAAAA,MAC/CR,IAAa/D,EAAagB,QAAU5F,EAAE,WAAaA,EAAE,oBAG1DY,EAAAA,EAAAA,MAAC4H,EAAAA,GAAS,CAAAzH,SAAA,CACP6D,EAAa2B,SACZ3F,EAAAA,EAAAA,MAAC6H,EAAAA,GAAS,CACR,kBAAiBnB,EAAAA,WACjB,uBAAqB,SACrBzG,UAAW6H,EACXN,QAASA,IAAMc,KAAKtE,EAAa2B,QAAQxF,SAAA,EAEzCC,EAAAA,EAAAA,KAACoI,EAAAA,EAAU,IACVpJ,EAAE,aAIN4E,EAAa6B,SACZ7F,EAAAA,EAAAA,MAAC6H,EAAAA,GAAS,CACR,kBAAiBnB,EAAAA,WACjB,uBAAqB,SACrBzG,UAAW6H,EACXN,QAASA,IAAMc,KAAKtE,EAAa6B,QAAQ1F,SAAA,EAEzCC,EAAAA,EAAAA,KAACqI,EAAAA,EAAU,IACVrJ,EAAE,cAIL4E,EAAa2B,SAAW3B,EAAa6B,SACrCzF,EAAAA,EAAAA,KAACyH,EAAAA,GAAS,CACR,kBAAiBnB,EAAAA,WACjB,uBAAsBtH,EAAE,cACxBa,UAAW6H,EAAgB3H,SAE1Bf,EAAE,mBAKTgB,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,CAAAzH,UACRH,EAAAA,EAAAA,MAAC0I,EAAAA,GAAI,CACHlB,QAASA,KAAA,IAAAmB,EAAAC,EAAA,OAAMlB,EAAAA,EAAAA,IAAU,KAAGC,EAAAA,EAAAA,GAAgC,QAAnBgB,EAAC3E,EAAaQ,aAAK,IAAAmE,GAAQ,QAARC,EAAlBD,EAAoBlE,cAAM,IAAAmE,OAAR,EAAlBA,EAA4BlE,QAAQV,EAAatC,KAAK,EAChGzB,UDrKK,8DCqKyBE,SAAA,EAE9BC,EAAAA,EAAAA,KAACyI,EAAAA,GAAI,CAAA1I,UACHC,EAAAA,EAAAA,KAAC0I,EAAAA,EAAc,MAEhB1J,EAAE,kBA5GF4E,EAAatC,GA+GT,KAGboC,EAAcuB,SACdrF,EAAAA,EAAAA,MAACwG,EAAAA,GAAQ,CAAArG,SAAA,EACPC,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,CAAAzH,SAAEf,EAAE,+BACdgB,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,KACVxH,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,KACVxH,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,KACVxH,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,KACVxH,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,KACVxH,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,KACVxH,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,cAKQ,ECrLnBmB,EAA0ExK,IAA8B,IAA7B,cAAEuF,EAAa,KAAEgC,GAAMvH,EAC7G,OAAQuH,GACN,IAAK,QACH,OAAO1F,EAAAA,EAAAA,KAAC4F,EAAgC,CAAQlC,kBAElD,IAAK,QACH,OAAO1D,EAAAA,EAAAA,KAACyD,EAAgC,CAAQC,kBACpD,E,kCCFK,MAAMkF,EAAkCA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACnD,MAAM,EAAEjK,IAAMC,EAAAA,EAAAA,MACR,QAAE4C,IAAYW,EAAAA,EAAAA,MACd,WAAE3D,IAAeE,EAAAA,EAAAA,OACjB,WAAEmK,EAAU,cAAEC,IAAkBC,EAAAA,EAAAA,KAEhCzI,EAAc,IAAI0I,EAAAA,YAElBC,GADmB5I,EAAAA,EAAAA,GAAgBC,GACCiB,OACxC,IAAKC,EAAS0H,iCAAkC,SAChDL,EAAWM,wBACX3K,EAAW4K,yBAOb,OAJArK,EAAAA,WAAgB,KACd+J,EAAc,IAAKD,EAAYM,wBAAyB,GAAI,GAC3D,CAAC3K,EAAW4K,2BAGb7J,EAAAA,EAAAA,MAAC8J,EAAAA,GAAS,CAACrL,gBClCQ,iDDkC0B0B,SAAA,EAC3CH,EAAAA,EAAAA,MAAA,OAAKC,UClCS,8CDkCgBE,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAC2J,EAAAA,GAAO,CAACC,MAAO,EAAG/J,UChCV,6CDgCkCE,SACxCf,EAAE,sBAIPgB,EAAAA,EAAAA,KAAC6J,EAAAA,EAAoB,CAACC,mBAAmB,yCAG3C9J,EAAAA,EAAAA,KAAA,OAAAD,UACEH,EAAAA,EAAAA,MAAA,OAAKC,UC1CQ,+CD0CkBE,SAAA,EAC7BC,EAAAA,EAAAA,KAACsC,EAAiC,IAEU,KAAtB,QAArBuG,EAAAS,EAAiBS,YAAI,IAAAlB,GAAS,QAATC,EAArBD,EAAuBmB,eAAO,IAAAlB,OAAT,EAArBA,EAAgC7D,UAAiBqE,EAAiBW,YACjEjK,EAAAA,EAAAA,KAAA,QAAAD,SAAOf,EAAE,6BAGW,QAArB+J,EAAAO,EAAiBS,YAAI,IAAAhB,OAAA,EAArBA,EAAuBiB,WAAgC,QAArBhB,EAAAM,EAAiBS,YAAI,IAAAf,GAAS,QAATC,EAArBD,EAAuBgB,eAAO,IAAAf,OAAT,EAArBA,EAAgChE,QAAS,IAC1ErF,EAAAA,EAAAA,MAAAuE,EAAAA,SAAA,CAAApE,SAAA,EACEC,EAAAA,EAAAA,KAAC2I,EAA2B,CAC1BjF,cAAe4F,EAAiBS,KAAKC,QACrCtE,KAAM7D,EAAQ0H,mCAGfD,EAAiBS,KAAKC,QAAQ/E,SAC7BrF,EAAAA,EAAAA,MAAA,OAAKC,UC3DG,kDD2D0BE,SAAA,EAChCC,EAAAA,EAAAA,KAACkK,EAAAA,GAAU,CACT7L,gBC5Da,2DD6Db8L,WAAYb,EAAiBS,KAAKK,MAClCtI,YAAawH,EAAiBS,KAAKM,KACnCC,eAAiBD,GAAclB,EAAc,IAAKD,EAAYM,wBAAyBa,IACvFtE,WAAY,CAAEwE,SAAUvL,EAAE,aAAcwL,aAAcxL,EAAE,iBAAkBqL,KAAMrL,EAAE,YAEpFgB,EAAAA,EAAAA,KAAC9B,EAAAA,EAA8B,CAACE,eAAgB,kCAKvDkL,EAAiBW,YAAajK,EAAAA,EAAAA,KAACyK,EAAAA,EAAQ,CAACC,OAAO,iBAG1C,EEtEhB,MAJ+CC,KACtC3K,EAAAA,EAAAA,KAAC4I,EAAqB,G,uDCLxB,MAAMrB,EAAiBpI,GACxBA,EAAMoF,SAAS,4BAAoC,gBACnDpF,EAAMoF,SAAS,yBAAiC,aAChDpF,EAAMoF,SAAS,2BAAmC,eAClDpF,EAAMoF,SAAS,wBAAgC,WAC/CpF,EAAMoF,SAAS,oCAA4C,8BAA/D,C,oECCF,MAAMqG,EAAuB,gBAAoB,CAAC,GAG5CC,GAAyB,EAE/B,SAASC,GAA4B,UAAEC,EAAS,eAAEC,EAAc,MAAEC,EAAK,OAAEP,EAAM,aAAEQ,EAAY,OAAEC,EAAM,UAAEC,EAAS,SAAEC,EAAQ,gBAAEC,EAAkBT,IAC1I,MAAMU,EAAQ,CAAC,EAmBf,MAlBkB,QAAdH,IACAG,EAAM,yBAA2B,WACb,iBAAbF,IACPE,EAAM,wBAA0B,GAAGF,MAClCC,IACDC,EAAM,4BAA8B,QACnB,iBAAVN,GAAuC,iBAAVA,IACpCM,EAAMN,MAAQA,GACI,iBAAXP,GAAyC,iBAAXA,IACrCa,EAAMb,OAASA,GACS,iBAAjBQ,GAAqD,iBAAjBA,IAC3CK,EAAML,aAAeA,GACrBC,IACAI,EAAML,aAAe,YACA,IAAdH,IACPQ,EAAM,gBAAkBR,QACE,IAAnBC,IACPO,EAAM,qBAAuBP,GAC1BO,CACX,CACA,SAASd,GAAS,MAAEe,EAAQ,EAAGC,QAASC,EAAS7L,UAAW8L,EAAe,mBAAEC,EAAkB,gBAAEC,EAAe,OAAEV,GAAS,EAAOI,MAAOO,KAAcC,IACnJ,IAAIC,EAAIC,EAAIC,EACZ,MAAMC,EAAsB,aAAiBvB,GACvCwB,EAAoB,IAAKL,GAG/B,IAAK,MAAOM,EAAKlN,KAAUmN,OAAOC,QAAQR,QACjB,IAAV5M,UACAiN,EAAkBC,GAIjC,MAAMG,EAAe,IACdL,KACAC,EACHjB,UAGEI,EAAQ,IACPO,KACAhB,EAA4B0B,IAEnC,IAAI3M,EAAY,yBACZ8L,IACA9L,GAAa,IAAI8L,KACrB,MAAMc,EAAwC,QAA9BT,EAAKQ,EAAaC,cAA2B,IAAPT,GAAgBA,EAChEU,EAAW,GACXC,EAAYC,KAAKC,KAAKrB,GAC5B,IAAK,IAAIsB,EAAI,EAAGA,EAAIH,EAAWG,IAAK,CAChC,IAAIC,EAAYxB,EAChB,GAAIoB,EAAYnB,GAASsB,IAAMH,EAAY,EAAG,CAO1C,MAAM1B,EAAmC,QAA1BgB,EAAKc,EAAU9B,aAA0B,IAAPgB,EAAgBA,EAAK,OAChEe,EAAiBxB,EAAQ,EACzByB,EAAmC,iBAAVhC,EACzBA,EAAQ+B,EACR,QAAQ/B,OAAW+B,KACzBD,EAAY,IAAKA,EAAW9B,MAAOgC,EACvC,CACA,MAAMC,EAAgB,gBAAoB,OAAQ,CAAErN,UAAWA,EAAW0L,MAAOwB,EAAWV,IAAKS,GAAK,KAClGL,EACAC,EAASS,KAAKD,GAKdR,EAASS,KAAK,gBAAoB,WAAgB,CAAEd,IAAKS,GACrDI,EACA,gBAAoB,KAAM,OAEtC,CACA,OAAQ,gBAAoB,OAAQ,CAAErN,UAAW+L,EAAoB,cAAeC,EAAiB,YAAa,SAAU,YAAqD,QAAvCK,EAAKM,EAAalB,uBAAoC,IAAPY,EAAgBA,EAAKrB,GAA0Ba,EAClOgB,EAAS/I,KAAI,CAACyJ,EAAIN,IAAM,gBAAoBpB,EAAS,CAAEW,IAAKS,GAAKM,KACjEV,EACV,C","sources":["webpack://skeleton-pip/./src/components/paginationLimitSelect/PaginationLimitSelect.tsx","webpack://skeleton-pip/./src/components/paginationLimitSelect/PaginationLimitSelect.module.css","webpack://skeleton-pip/./src/hooks/organization.ts","webpack://skeleton-pip/./src/templates/templateParts/filters/organizationSearchFilterTemplate/OrganizationSearchFilterTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/OrganizationDisplayTemplates/cards/CardsOrganizationDisplayTemplate.module.css","webpack://skeleton-pip/./src/templates/templateParts/OrganizationDisplayTemplates/cards/CardsOrganizationDisplayTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/OrganizationDisplayTemplates/table/TableOrganizationDisplayTemplate.module.css","webpack://skeleton-pip/./src/templates/templateParts/OrganizationDisplayTemplates/table/TableOrganizationDisplayTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/OrganizationDisplayTemplates/OrganizationDisplayTemplate.tsx","webpack://skeleton-pip/./src/templates/organizationsTemplate/OrganizationsTemplate.tsx","webpack://skeleton-pip/./src/templates/organizationsTemplate/OrganizationsTemplate.module.css","webpack://skeleton-pip/./src/pages/organizations/OrganizationsPage.tsx","webpack://skeleton-pip/./src/services/getResultsUrl.ts","webpack://skeleton-pip/./node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["import * as React from \"react\";\r\nimport * as styles from \"./PaginationLimitSelect.module.css\";\r\nimport clsx from \"clsx\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { SelectSingle } from \"@conduction/components\";\r\nimport { IQueryLimitContext, QUERY_LIMIT_DEFAULT, useQueryLimitContext } from \"../../context/queryLimit\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface PaginationLimitSelectProps {\r\n  queryLimitName: string;\r\n  layoutClassName?: string;\r\n}\r\n\r\nexport const PaginationLimitSelectComponent: React.FC<PaginationLimitSelectProps> = ({\r\n  queryLimitName,\r\n  layoutClassName,\r\n}) => {\r\n  const {\r\n    watch,\r\n    register,\r\n    control,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const { queryLimit, setQueryLimit } = useQueryLimitContext();\r\n  const { t } = useTranslation();\r\n\r\n  const watchLimit = watch(\"limit\");\r\n\r\n  const value = queryLimit[queryLimitName as keyof IQueryLimitContext];\r\n\r\n  React.useEffect(() => {\r\n    if (!watchLimit) return;\r\n    if (parseInt(watchLimit.value) === value) return;\r\n\r\n    const selectedLimit = limitSelectOptions.find((limitOption) => limitOption.value === watchLimit.value);\r\n\r\n    if (selectedLimit) {\r\n      setQueryLimit({ ...queryLimit, [queryLimitName]: parseInt(selectedLimit.value) });\r\n    }\r\n  }, [watchLimit]);\r\n\r\n  React.useEffect(() => {\r\n    setValue(\r\n      \"limit\",\r\n      limitSelectOptions.find((limitOption) => limitOption.value === (value !== undefined && value.toString())),\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className={clsx(styles.container, layoutClassName && layoutClassName)}>\r\n      <span>{t(\"Results per page\")}:</span>\r\n      <SelectSingle\r\n        ariaLabel={t(\"Select result limit\")}\r\n        {...{ register, errors, control }}\r\n        defaultValue={QUERY_LIMIT_DEFAULT}\r\n        name=\"limit\"\r\n        options={limitSelectOptions}\r\n        menuPlacement=\"auto\"\r\n        placeholder={t(\"Limit\")}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst limitSelectOptions = [\r\n  { label: \"6\", value: \"6\" },\r\n  { label: \"8\", value: \"8\" },\r\n  { label: \"10\", value: \"10\" },\r\n  { label: \"16\", value: \"16\" },\r\n  { label: \"20\", value: \"20\" },\r\n  { label: \"40\", value: \"40\" },\r\n  { label: \"60\", value: \"60\" },\r\n  { label: \"100\", value: \"100\" },\r\n];\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"PaginationLimitSelect-module--container--4b5a5\";","import * as React from \"react\";\nimport { QueryClient, useQuery } from \"react-query\";\nimport APIService from \"../apiService/apiService\";\nimport APIContext from \"../apiService/apiContext\";\nimport { IFiltersContext } from \"../context/filters\";\n\nexport const useOrganization = (queryClient: QueryClient) => {\n  const API: APIService | null = React.useContext(APIContext);\n\n  const getOne = (organizationId: string) =>\n    useQuery<any, Error>([\"organizations\", organizationId], () => API?.Organization.getOne(organizationId), {\n      initialData: () =>\n        queryClient.getQueryData<any[]>(\"organizations\")?.find((_organization) => _organization.id === organizationId),\n      onError: (error) => {\n        throw new Error(error.message);\n      },\n      enabled: !!organizationId,\n    });\n\n  const getAll = (filters: IFiltersContext, currentPage: number, limit: number) =>\n    useQuery<any, Error>(\n      [\"organizations\", filters, currentPage, limit],\n      () => API?.Organization.getAll(filters, currentPage, limit),\n      {\n        onError: (error) => {\n          throw new Error(error.message);\n        },\n      },\n    );\n\n  const filtersGetAll = () =>\n    useQuery<any, Error>([\"organizations\"], () => API?.Organization.filtersGetAll(), {\n      onError: (error) => {\n        throw new Error(error.message);\n      },\n    });\n\n  const getCount = (filters: IFiltersContext) =>\n    useQuery<any, Error>([\"organizations_count\", filters], () => API?.Organization.getCount(filters), {\n      onError: (error) => {\n        throw new Error(error.message);\n      },\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false,\n      retry: false,\n      staleTime: 60 * 10 * 1000, // 10 minutes\n    });\n\n  return { getOne, getAll, getCount, filtersGetAll };\n};\n","import * as React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useFiltersContext } from \"../../../../context/filters\";\r\nimport { FormField, FormLabel, Textbox } from \"@utrecht/component-library-react/dist/css-module\";\r\n\r\nexport const OrganizationSearchFiltersTemplate: React.FC = () => {\r\n  const { filters, setFilters } = useFiltersContext();\r\n  const searchTimeout = React.useRef<NodeJS.Timeout | null>(null);\r\n\r\n  const {\r\n    register,\r\n    watch,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n  React.useEffect(() => {\r\n    reset({\r\n      name: filters.organizationSearch,\r\n    });\r\n  }, [filters]);\r\n\r\n  const watchName = watch(\"name\");\r\n\r\n  React.useEffect(() => {\r\n    if (searchTimeout.current) clearTimeout(searchTimeout.current);\r\n    searchTimeout.current = setTimeout(\r\n      () =>\r\n        setFilters({\r\n          ...filters,\r\n          organizationSearch: watchName === undefined ? \"\" : watchName, //This check is important for the react lifecycle\r\n        }),\r\n      500,\r\n    );\r\n  }, [watchName]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <FormField>\r\n        <FormLabel htmlFor={\"OrganizationSearchFormInput\"}>Zoek op naam</FormLabel>\r\n        <Textbox id=\"OrganizationSearchFormInput\" {...register(\"name\", { required: true })} invalid={errors[\"name\"]} />\r\n      </FormField>\r\n    </form>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var componentsGrid = \"CardsOrganizationDisplayTemplate-module--componentsGrid--7b0b0\";","import * as React from \"react\";\nimport * as styles from \"./CardsOrganizationDisplayTemplate.module.css\";\nimport { OrganizationCard } from \"../../../../components/organizationCard/OrganizationCard\";\n\ninterface CardsOrganizationDisplayTemplateProps {\n  organizations: any[];\n}\n\nexport const CardsOrganizationDisplayTemplate: React.FC<CardsOrganizationDisplayTemplateProps> = ({\n  organizations,\n}) => {\n  return (\n    <div className={styles.componentsGrid}>\n      {organizations.map((organization) => (\n        <>\n          {organization._self.schema.ref.includes(\"organisation.schema.json\") && (\n            <OrganizationCard\n              title={{\n                label: organization.name,\n                href: `/organizations/${organization.id}`,\n              }}\n              description={organization.description}\n              website={organization.website}\n              logo={organization.logo}\n              components={{\n                owned: organization.owns?.length.toString() ?? \"0\",\n                supported: organization.supports?.length.toString() ?? \"0\",\n                used: organization.uses?.length.toString() ?? \"0\",\n              }}\n              gitHub={organization.github}\n              gitLab={organization.gitlab}\n              type={organization.type}\n            />\n          )}\n        </>\n      ))}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var componentsHeader = \"TableOrganizationDisplayTemplate-module--componentsHeader--1d681\";\nexport var detailsLink = \"TableOrganizationDisplayTemplate-module--detailsLink--7e96e\";\nexport var name = \"TableOrganizationDisplayTemplate-module--name--223d3\";\nexport var tableRow = \"TableOrganizationDisplayTemplate-module--tableRow--32465\";\nexport var tagWidth = \"TableOrganizationDisplayTemplate-module--tagWidth--6bf88\";\nexport var tags = \"TableOrganizationDisplayTemplate-module--tags--97025\";","import * as React from \"react\";\nimport * as styles from \"./TableOrganizationDisplayTemplate.module.css\";\nimport _ from \"lodash\";\nimport { Icon, DataBadge, Link } from \"@utrecht/component-library-react/dist/css-module\";\nimport { navigate } from \"gatsby\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader,\n  TableHeaderCell,\n} from \"@utrecht/component-library-react/dist/css-module\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { getResultsUrl } from \"../../../../services/getResultsUrl\";\nimport { HorizontalOverflowWrapper } from \"@conduction/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGlobe, faHouseLaptop, faInfoCircle, faRepeat, faUserCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { GitHubLogo } from \"../../../../assets/svgs/GitHub\";\nimport { GitLabLogo } from \"../../../../assets/svgs/GitLab\";\nimport { TOOLTIP_ID } from \"../../../../layout/Layout\";\n\ninterface TableOrganizationDisplayTemplateProps {\n  organizations: any[];\n  hideTableHead?: boolean;\n}\n\nexport const TableOrganizationDisplayTemplate: React.FC<TableOrganizationDisplayTemplateProps> = ({\n  organizations,\n  hideTableHead,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <HorizontalOverflowWrapper\n      ariaLabels={{ scrollLeftButton: t(\"Scroll left\"), scrollRightButton: t(\"Scroll right\") }}\n    >\n      <Table>\n        {!hideTableHead && (\n          <TableHeader>\n            <TableRow>\n              <TableHeaderCell>{t(\"Name\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Sources\")}</TableHeaderCell>\n              <TableHeaderCell\n                data-tooltip-id={TOOLTIP_ID}\n                data-tooltip-content={t(\"Owned, supported and used components\")}\n                className={styles.componentsHeader}\n              >\n                {t(\"Components\")}\n                <FontAwesomeIcon icon={faInfoCircle}></FontAwesomeIcon>\n              </TableHeaderCell>\n              <TableHeaderCell>{t(\"Website\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"GitHub/Gitlab\")}</TableHeaderCell>\n              <TableHeader />\n            </TableRow>\n          </TableHeader>\n        )}\n\n        <TableBody>\n          {organizations.length > 0 &&\n            organizations.map((organization) => (\n              <TableRow\n                className={styles.tableRow}\n                key={organization.id}\n                onClick={() => navigate(`/${getResultsUrl(organization._self?.schema.ref)}/${organization.id}`)}\n              >\n                <TableCell>\n                  <span className={styles.name}>{organization.name}</span>\n                </TableCell>\n\n                <TableCell>\n                  <DataBadge\n                    data-tooltip-id={TOOLTIP_ID}\n                    data-tooltip-content={t(\"Sources\")}\n                    className={styles.tagWidth}\n                  >\n                    {_.upperFirst(\n                      organization._self?.synchronizations\n                        ? organization._self?.synchronizations?.length\n                          ? organization._self?.synchronizations?.at(-1)?.source.name\n                          : \"Onbekend\"\n                        : \"N.V.T.\",\n                    )}\n                  </DataBadge>\n                </TableCell>\n\n                <TableCell>\n                  <div className={styles.tags}>\n                    <DataBadge\n                      data-tooltip-id={TOOLTIP_ID}\n                      data-tooltip-content=\"Aantal eigen componenten\"\n                      className={styles.tagWidth}\n                    >\n                      <FontAwesomeIcon icon={faHouseLaptop} />\n                      {organization.owns?.length.toString() ?? \"0\"}\n                    </DataBadge>\n                    <DataBadge\n                      data-tooltip-id={TOOLTIP_ID}\n                      data-tooltip-content=\"Aantal ondersteunde componenten\"\n                      className={styles.tagWidth}\n                    >\n                      <FontAwesomeIcon icon={faUserCog} />\n                      {organization.supported?.length.toString() ?? \"0\"}\n                    </DataBadge>\n\n                    <DataBadge\n                      data-tooltip-id={TOOLTIP_ID}\n                      data-tooltip-content=\"Aantal gebruikte componenten\"\n                      className={styles.tagWidth}\n                    >\n                      <FontAwesomeIcon icon={faRepeat} />\n                      {organization.used?.length.toString() ?? \"0\"}\n                    </DataBadge>\n                  </div>\n                </TableCell>\n\n                <TableCell>\n                  <DataBadge\n                    data-tooltip-id={TOOLTIP_ID}\n                    data-tooltip-content={organization.website ?? t(\"Website\")}\n                    className={styles.tagWidth}\n                    onClick={() => open(organization.website)}\n                  >\n                    {organization.website && <FontAwesomeIcon icon={faGlobe} />}\n                    {_.upperFirst(organization.website ? t(\"Website\") : t(\"Not found\"))}\n                  </DataBadge>\n                </TableCell>\n                <TableCell>\n                  {organization.github && (\n                    <DataBadge\n                      data-tooltip-id={TOOLTIP_ID}\n                      data-tooltip-content=\"GitHub\"\n                      className={styles.tagWidth}\n                      onClick={() => open(organization.github)}\n                    >\n                      <GitHubLogo />\n                      {t(\"GitHub\")}\n                    </DataBadge>\n                  )}\n\n                  {organization.gitlab && (\n                    <DataBadge\n                      data-tooltip-id={TOOLTIP_ID}\n                      data-tooltip-content=\"GitLab\"\n                      className={styles.tagWidth}\n                      onClick={() => open(organization.gitlab)}\n                    >\n                      <GitLabLogo />\n                      {t(\"GitLab\")}\n                    </DataBadge>\n                  )}\n\n                  {!organization.github && !organization.gitlab && (\n                    <DataBadge\n                      data-tooltip-id={TOOLTIP_ID}\n                      data-tooltip-content={t(\"Repository\")}\n                      className={styles.tagWidth}\n                    >\n                      {t(\"Not found\")}\n                    </DataBadge>\n                  )}\n                </TableCell>\n\n                <TableCell>\n                  <Link\n                    onClick={() => navigate(`/${getResultsUrl(organization._self?.schema?.ref)}/${organization.id}`)}\n                    className={styles.detailsLink}\n                  >\n                    <Icon>\n                      <IconArrowRight />\n                    </Icon>\n                    {t(\"Details\")}\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n\n          {!organizations.length && (\n            <TableRow>\n              <TableCell>{t(\"Geen resultaten gevonden\")}</TableCell>\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </HorizontalOverflowWrapper>\n  );\n};\n","import * as React from \"react\";\nimport { TOrganizationsResultDisplayLayout } from \"../../../context/filters\";\nimport { CardsOrganizationDisplayTemplate } from \"./cards/CardsOrganizationDisplayTemplate\";\nimport { TableOrganizationDisplayTemplate } from \"./table/TableOrganizationDisplayTemplate\";\n\ninterface OrganizationDisplayTemplateProps {\n  type: TOrganizationsResultDisplayLayout;\n  organizations: any[];\n\n}\n\nexport const OrganizationDisplayTemplate: React.FC<OrganizationDisplayTemplateProps> = ({ organizations, type }) => {\n  switch (type) {\n    case \"table\":\n      return <TableOrganizationDisplayTemplate  {...{ organizations }}/>;\n\n    case \"cards\":\n      return <CardsOrganizationDisplayTemplate  {...{ organizations }}/>;\n  }\n};\n","import * as React from \"react\";\nimport * as styles from \"./OrganizationsTemplate.module.css\";\nimport { Container, Pagination } from \"@conduction/components\";\nimport { useFiltersContext } from \"../../context/filters\";\nimport { useTranslation } from \"react-i18next\";\nimport { QueryClient } from \"react-query\";\nimport Skeleton from \"react-loading-skeleton\";\nimport ResultsDisplaySwitch from \"../../components/resultsDisplaySwitch/ResultsDisplaySwitch\";\nimport { Heading } from \"@utrecht/component-library-react/dist/css-module\";\nimport { useOrganization } from \"../../hooks/organization\";\nimport { OrganizationSearchFiltersTemplate } from \"../templateParts/filters/organizationSearchFilterTemplate/OrganizationSearchFilterTemplate\";\nimport { OrganizationDisplayTemplate } from \"../templateParts/OrganizationDisplayTemplates/OrganizationDisplayTemplate\";\nimport { usePaginationContext } from \"../../context/pagination\";\nimport { PaginationLimitSelectComponent } from \"../../components/paginationLimitSelect/PaginationLimitSelect\";\nimport { useQueryLimitContext } from \"../../context/queryLimit\";\n\nexport const OrganizationsTemplate: React.FC = () => {\n  const { t } = useTranslation();\n  const { filters } = useFiltersContext();\n  const { queryLimit } = useQueryLimitContext();\n  const { pagination, setPagination } = usePaginationContext();\n\n  const queryClient = new QueryClient();\n  const _useOrganisation = useOrganization(queryClient);\n  const getOrganisations = _useOrganisation.getAll(\n    { ...filters, organizationsResultDisplayLayout: \"cards\" },\n    pagination.organizationCurrentPage,\n    queryLimit.organizationsQueryLimit,\n  );\n\n  React.useEffect(() => {\n    setPagination({ ...pagination, organizationCurrentPage: 1 });\n  }, [queryLimit.organizationsQueryLimit]);\n\n  return (\n    <Container layoutClassName={styles.container}>\n      <div className={styles.header}>\n        <div>\n          <Heading level={2} className={styles.title}>\n            {t(\"Organizations\")}\n          </Heading>\n        </div>\n\n        <ResultsDisplaySwitch resultsDisplayType=\"organizationsResultDisplayLayout\" />\n      </div>\n\n      <div>\n        <div className={styles.results}>\n          <OrganizationSearchFiltersTemplate />\n\n          {getOrganisations.data?.results?.length === 0 && !getOrganisations.isLoading && (\n            <span>{t(\"No organizations found\")}</span>\n          )}\n\n          {getOrganisations.data?.results && getOrganisations.data?.results?.length > 0 && (\n            <>\n              <OrganizationDisplayTemplate\n                organizations={getOrganisations.data.results}\n                type={filters.organizationsResultDisplayLayout}\n              />\n\n              {getOrganisations.data.results.length && (\n                <div className={styles.pagination}>\n                  <Pagination\n                    layoutClassName={styles.paginationContainer}\n                    totalPages={getOrganisations.data.pages}\n                    currentPage={getOrganisations.data.page}\n                    setCurrentPage={(page: any) => setPagination({ ...pagination, organizationCurrentPage: page })}\n                    ariaLabels={{ nextPage: t(\"Next page\"), previousPage: t(\"Previous page\"), page: t(\"Page\") }}\n                  />\n                  <PaginationLimitSelectComponent queryLimitName={\"organizationsQueryLimit\"} />\n                </div>\n              )}\n            </>\n          )}\n          {getOrganisations.isLoading && <Skeleton height=\"200px\" />}\n        </div>\n      </div>\n    </Container>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var container = \"OrganizationsTemplate-module--container--ad6b9\";\nexport var header = \"OrganizationsTemplate-module--header--5b5ac\";\nexport var pagination = \"OrganizationsTemplate-module--pagination--41deb\";\nexport var paginationContainer = \"OrganizationsTemplate-module--paginationContainer--1809a\";\nexport var results = \"OrganizationsTemplate-module--results--f7087\";\nexport var title = \"OrganizationsTemplate-module--title--e0b49\";","import * as React from \"react\";\r\nimport { PageProps } from \"gatsby\";\r\nimport { OrganizationsTemplate } from \"../../templates/organizationsTemplate/OrganizationsTemplate\";\r\n\r\nconst OrganizationsPage: React.FC<PageProps> = () => {\r\n  return <OrganizationsTemplate />;\r\n};\r\n\r\nexport default OrganizationsPage;\r\n","export const getResultsUrl = (value: any): any => {\n  if (value.includes(\"organisation.schema.json\")) return \"organizations\";\n  if (value.includes(\"component.schema.json\")) return \"components\";\n  if (value.includes(\"application.schema.json\")) return \"applications\";\n  if (value.includes(\"contacts.schema.json\")) return \"contacts\";\n  if (value.includes(\"componentlegalentity.schema.json\")) return \"componentlegalentities\";\n\n  //TODO add more values if we make more detail pages\n};\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["PaginationLimitSelectComponent","_ref","queryLimitName","layoutClassName","watch","register","control","setValue","formState","errors","useForm","queryLimit","setQueryLimit","useQueryLimitContext","t","useTranslation","watchLimit","value","React","parseInt","selectedLimit","limitSelectOptions","find","limitOption","undefined","toString","_jsxs","className","clsx","children","_jsx","SelectSingle","ariaLabel","defaultValue","QUERY_LIMIT_DEFAULT","name","options","menuPlacement","placeholder","label","useOrganization","queryClient","API","APIContext","getOne","organizationId","useQuery","Organization","initialData","_queryClient$getQuery","getQueryData","_organization","id","onError","error","Error","message","enabled","getAll","filters","currentPage","limit","getCount","refetchOnWindowFocus","refetchOnReconnect","retry","staleTime","filtersGetAll","OrganizationSearchFiltersTemplate","setFilters","useFiltersContext","searchTimeout","reset","organizationSearch","watchName","current","clearTimeout","setTimeout","onSubmit","e","preventDefault","FormField","FormLabel","htmlFor","Textbox","required","invalid","CardsOrganizationDisplayTemplate","organizations","map","organization","_organization$owns$le","_organization$owns","_organization$support","_organization$support2","_organization$uses$le","_organization$uses","_Fragment","_self","schema","ref","includes","OrganizationCard","title","href","description","website","logo","components","owned","owns","length","supported","supports","used","uses","gitHub","github","gitLab","gitlab","type","tagWidth","TableOrganizationDisplayTemplate","hideTableHead","HorizontalOverflowWrapper","ariaLabels","scrollLeftButton","scrollRightButton","Table","TableHeader","TableRow","TableHeaderCell","TOOLTIP_ID","FontAwesomeIcon","icon","faInfoCircle","TableBody","_organization$_self2","_organization$_self3","_organization$_self3$","_organization$_self4","_organization$_self4$","_organization$_self4$2","_organization$used$le","_organization$used","_organization$website","onClick","_organization$_self","navigate","getResultsUrl","TableCell","DataBadge","styles","_upperFirst","synchronizations","at","source","faHouseLaptop","faUserCog","faRepeat","open","faGlobe","GitHubLogo","GitLabLogo","Link","_organization$_self5","_organization$_self5$","Icon","IconArrowRight","OrganizationDisplayTemplate","OrganizationsTemplate","_getOrganisations$dat","_getOrganisations$dat2","_getOrganisations$dat3","_getOrganisations$dat4","_getOrganisations$dat5","pagination","setPagination","usePaginationContext","QueryClient","getOrganisations","organizationsResultDisplayLayout","organizationCurrentPage","organizationsQueryLimit","Container","Heading","level","ResultsDisplaySwitch","resultsDisplayType","data","results","isLoading","Pagination","totalPages","pages","page","setCurrentPage","nextPage","previousPage","Skeleton","height","OrganizationsPage","SkeletonThemeContext","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","width","borderRadius","circle","direction","duration","enableAnimation","style","count","wrapper","Wrapper","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}